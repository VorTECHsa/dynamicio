[tool.poetry]
name = "dynamicio"
version = "0.0.0"  # dummy, will be overridden by git tag
description = "Panda's wrapper for IO operations"
authors = [
    "Christos Hadjinikolis <christos.hadjinikolis@gmail.com>",
    "Radu Ghitescu <radu.ghitescu@gmail.com>"
]
readme = "README.md"
packages = [{ include = "dynamicio" }]
license = "Apache-2.0"
keywords = ["data", "pandas", "io"]
classifiers = [
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"
awscli = ">=1.22.24"
boto3 = ">=1.20.24"
pyathena = "*"
fastparquet = ">=0.8.0"
fsspec = "==2022.11.0"
confluent-kafka = "~2.4.0"
logzero = ">=1.7.0"
magic-logger = ">=1.0.2"
numpy = ">=1.24.0,<2.0.0"
no_implicit_optional = "==1.4.0"
pandas = ">=1.5.1"
psycopg2-binary = "~2.9.3"
pyarrow = ">=10.0.1"
pydantic = ">=1.9.2,<3"
python-json-logger = "~2.0.1"
PyYAML = ">=5.4.1"
s3fs = "==0.4.2"
simplejson = "~3.17.2"
SQLAlchemy = ">=1.4.11"
tables = ">=3.10.1"
libcst = "==1.5.1"

[tool.poetry.group.dev.dependencies]
black = "*"
flake8-import-order = "*"
flake8-print = "*"
flake8-tidy-imports = "*"
flake8 = "*"
gitlint = "*"
mock = "*"
pandas-stubs = "*"
pre-commit = "*"
pydocstyle = "*"
pylint = "*"
pytest-asyncio = "*"
pytest-cov = "*"
pytest = "*"
tox = "*"
types-PyYAML = "*"
types-setuptools = "*"
types-simplejson = "*"
yamllint = "*"

[tool.poetry.group.docs.dependencies]
pdoc3 = "*"

[tool.poetry.group.build.dependencies]
setuptools = "==70.0.0"
twine = "==4.0.1"
wheel = "==0.38.4"

[tool.poetry.scripts]
dynamicio = "dynamicio.cli:run"

[build-system]
requires = [
  "setuptools>=69.0.3",
  "wheel",
  "poetry-core>=1.0.0",
  "poetry-dynamic-versioning"
]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "pep440"
fix-shallow-repository = true

[tool.black]
target-version = ['py310']
line-length = 185
include = '\.pyi?$'
exclude = '''
(
  /(
      \.git
    | \.github
    | \.venv
    | docs
    | demo
  )/
  | tests/conftest.py
)
'''

[tool.isort]
profile = "black"
line_length = 185
known_first_party = ["dynamicio", "tests"]
import_heading_firstparty = "Application Imports"

[tool.pylint.'MASTER']
load-plugins = ["pylint.extensions.docparams"]
extension-pkg-whitelist = "pydantic"
max-line-length = 185

[tool.pylint.'MESSAGES CONTROL']
disable = [
    "C0114", # missing-module-docstring
    "C0115", # missing-class-docstring
    "C0116", # missing-function-docstring
    "R0903", # too-few-public-methods
    "W0621", # redefined-outer-name
]

[tool.pylint.'FORMAT']
max-line-length = 185


[tool.pytest.ini_options]
    markers = [
        "unit: mark tests that asses the logic of a functions smaller logical components",
        "integration: mark a test concerned with the use of multiple functions",
    ]
    addopts = "-p no:warnings"
    log_cli = false

[tool.pydocstyle]
convention = 'google'
add_ignore = 'D103' # Ignore missing docstring in public function
